/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  SaleOpportunity as PrismaSaleOpportunity,
  Contract as PrismaContract,
  Lead as PrismaLead,
} from "@prisma/client";

export class SaleOpportunityServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SaleOpportunityCountArgs, "select">
  ): Promise<number> {
    return this.prisma.saleOpportunity.count(args);
  }

  async saleOpportunities(
    args: Prisma.SaleOpportunityFindManyArgs
  ): Promise<PrismaSaleOpportunity[]> {
    return this.prisma.saleOpportunity.findMany(args);
  }
  async saleOpportunity(
    args: Prisma.SaleOpportunityFindUniqueArgs
  ): Promise<PrismaSaleOpportunity | null> {
    return this.prisma.saleOpportunity.findUnique(args);
  }
  async createSaleOpportunity(
    args: Prisma.SaleOpportunityCreateArgs
  ): Promise<PrismaSaleOpportunity> {
    return this.prisma.saleOpportunity.create(args);
  }
  async updateSaleOpportunity(
    args: Prisma.SaleOpportunityUpdateArgs
  ): Promise<PrismaSaleOpportunity> {
    return this.prisma.saleOpportunity.update(args);
  }
  async deleteSaleOpportunity(
    args: Prisma.SaleOpportunityDeleteArgs
  ): Promise<PrismaSaleOpportunity> {
    return this.prisma.saleOpportunity.delete(args);
  }

  async findContracts(
    parentId: string,
    args: Prisma.ContractFindManyArgs
  ): Promise<PrismaContract[]> {
    return this.prisma.saleOpportunity
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .contracts(args);
  }

  async getLead(parentId: string): Promise<PrismaLead | null> {
    return this.prisma.saleOpportunity
      .findUnique({
        where: { id: parentId },
      })
      .lead();
  }
}
