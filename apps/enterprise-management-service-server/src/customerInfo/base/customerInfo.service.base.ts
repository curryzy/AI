/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  CustomerInfo as PrismaCustomerInfo,
  CustomerLevel as PrismaCustomerLevel,
} from "@prisma/client";

export class CustomerInfoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CustomerInfoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.customerInfo.count(args);
  }

  async customerInfos(
    args: Prisma.CustomerInfoFindManyArgs
  ): Promise<PrismaCustomerInfo[]> {
    return this.prisma.customerInfo.findMany(args);
  }
  async customerInfo(
    args: Prisma.CustomerInfoFindUniqueArgs
  ): Promise<PrismaCustomerInfo | null> {
    return this.prisma.customerInfo.findUnique(args);
  }
  async createCustomerInfo(
    args: Prisma.CustomerInfoCreateArgs
  ): Promise<PrismaCustomerInfo> {
    return this.prisma.customerInfo.create(args);
  }
  async updateCustomerInfo(
    args: Prisma.CustomerInfoUpdateArgs
  ): Promise<PrismaCustomerInfo> {
    return this.prisma.customerInfo.update(args);
  }
  async deleteCustomerInfo(
    args: Prisma.CustomerInfoDeleteArgs
  ): Promise<PrismaCustomerInfo> {
    return this.prisma.customerInfo.delete(args);
  }

  async getCustomerLevel(
    parentId: string
  ): Promise<PrismaCustomerLevel | null> {
    return this.prisma.customerInfo
      .findUnique({
        where: { id: parentId },
      })
      .customerLevel();
  }
}
